package 基础实例.代码块;

public class Block {
    /**
     * 在Java中，使用花括号或者也叫大括号{}
     *就是代码块
     *根据声明的位置不同，一般可以分为
     *1、局部代码块
     *2、构造代码块
     *3、静态代码块
     *同步代码块【多线程】
     */
    /*
     * 局部代码块：
     *方法上，以及方法内部出现的所有花括号都是局部代码块
     *主要包含了，方法体代码块，循环结构代码，分支结构代码块。
     *方法后面跟上的花括号就是方法体代码块，也是一个局部代码块
     *if、else、if-else、switch-case里面的花括号都属于局部代码块
     *for循环，while、do-while循环中的花括号也是局部代码块
     */
    /*
     * 构造代码块
     *构造代码块用于给对象进行初始化操作。只要创建对象就会执行。
     *构造方法用于创建对象并且进行初始化操作。
     *在类中，方法外就是构造代码块，方法上和方法中是局部代码块
     */
    /*
     *静态代码块
     *静态代码块是用于给类进行初始化的，在类加载的时候就会执行，并且只会执行一次，因为类只需要加载一次。
     *构造代码块是给对象进行初始化的，但是静态代码块是给类进行初始化的。
     *因为静态是与对象无关，是依赖于类的。
     */
    /**
     * 1. 构造代码块可以写多个，但是*要求只写一个。
     * 2. 构造代码块不能主动调用，和构造方法一样。
     * 3. 不管创建几个对象，静态代码块只会执行一次，并且在构造代码块前执行。
     */
    //构造方法
    public Block() {
        System.out.println("1构造方法");
    }
    //构造代码块
    {
        System.out.println("2构造代码块");
    }                                   //静态代码块和构造代码块都默认为private修饰。
    //静态代码块
    static {
        System.out.println("3静态代码块");
    }
    public static final int n=1;
    //final 修饰的变量只能赋值一次，所以只有get方法，没有set方法。
    //被静态修饰，静态不能调用非静态，所以只有静态可以调静态，反之亦也。必须加上static。
    public static int getN() {
        return n;
    }/*static修饰变量set方法赋值
    static int m;
    public static void setM(int m) {
        Block.m = m;//因为static里不能用this
    }*/
}
